/**
 * Definition for a binary tree node.
 * function TreeNode(val, left, right) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.left = (left===undefined ? null : left)
 *     this.right = (right===undefined ? null : right)
 * }
 */
/**
 * @param {TreeNode} root
 * @return {number[][]}
 */
var zigzagLevelOrder = function(root) {
    



    if (!root) return [];

    let result = [];
    let queue = [root];
    let leftToRight = true;

    while (queue.length) {
        let levelSize = queue.length;
        let levelNodes = [];

        for (let i = 0; i < levelSize; i++) {
            let currentNode = queue.shift();
            
            // Add nodes in normal or reversed order depending on the flag
            if (leftToRight) {
                levelNodes.push(currentNode.val);
            } else {
                levelNodes.unshift(currentNode.val);
            }

            if (currentNode.left) queue.push(currentNode.left);
            if (currentNode.right) queue.push(currentNode.right);
            }

        result.push(levelNodes);
        leftToRight = !leftToRight; // Toggle direction
    }

    return result;
    }

